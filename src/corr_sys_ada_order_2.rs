use num::complex::{Complex, Complex64};

const hbar: f64 = 1.0;
const delta: f64 = 0.0;
const true_g: f64 = 10.0;
const g: f64 = true_g / 1.41421356;
const kappa: f64 = 40.0;
const gamma: f64 = 9.0;
const nu: f64 = 1.0;

type Cvecf = Vec<Complex<f64>>;

pub fn corr_system_ada_order_2(time: f64, yn: &Cvecf, fty: &mut Cvecf){
	 fty[0] = (Complex::new(0.0, 1.0))*g*yn[1] + (Complex::new(0.0, -1.0))*g*yn[1].conj() + (Complex::new(-1.0, 0.0))*kappa*yn[0];
	 fty[1] = (Complex::new(0.0, -1.0))*delta*yn[1] + (Complex::new(0.0, -1.0))*g*yn[2] + (Complex::new(-0.5, 0.0))*kappa*yn[1] + (Complex::new(0.0, -2.0))*g*hbar*yn[5]*yn[8] + (Complex::new(0.0, -2.0))*g*hbar*yn[5].conj()*yn[8].conj() + (Complex::new(0.0, -2.0))*g*hbar*yn[3]*yn[0] + (Complex::new(0.0, 4.0))*g*hbar*yn[3]*yn[8].conj()*yn[8] + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[6]*yn[8] + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[5].conj()*yn[7] + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[3]*yn[1] + (Complex::new(2.0, 0.0))*gamma*hbar*yn[3]*yn[7]*yn[8] + (Complex::new(1.0, 0.0))*nu*hbar*yn[6]*yn[8] + (Complex::new(1.0, 0.0))*nu*hbar*yn[5].conj()*yn[7] + (Complex::new(1.0, 0.0))*nu*hbar*yn[3]*yn[1] + (Complex::new(-2.0, 0.0))*nu*hbar*yn[3]*yn[7]*yn[8] + (Complex::new(-1.0, 0.0))*nu*hbar*hbar*yn[1] + (Complex::new(0.0, -2.0))*g*hbar*yn[3]; 
	 fty[2] = (Complex::new(0.0, 2.0))*g*hbar*yn[6]*yn[8] + (Complex::new(0.0, 2.0))*g*hbar*yn[5].conj()*yn[7] + (Complex::new(0.0, 2.0))*g*hbar*yn[3]*yn[1] + (Complex::new(-0.0, -4.0))*g*hbar*yn[3]*yn[7]*yn[8] + (Complex::new(0.0, -2.0))*g*hbar*yn[9]*yn[8].conj() + (Complex::new(0.0, -2.0))*g*hbar*yn[5]*yn[7].conj() + (Complex::new(0.0, -2.0))*g*hbar*yn[3]*yn[1].conj() + (Complex::new(0.0, 4.0))*g*hbar*yn[3]*yn[7].conj()*yn[8].conj() + (Complex::new(0.0, -2.0))*g*hbar*hbar*yn[1].conj() + (Complex::new(-2.0, 0.0))*gamma*hbar*yn[9]*yn[7] + (Complex::new(-2.0, 0.0))*gamma*hbar*yn[6]*yn[7].conj() + (Complex::new(-2.0, 0.0))*gamma*hbar*yn[3]*yn[2] + (Complex::new(4.0, 0.0))*gamma*hbar*yn[3]*yn[7].conj()*yn[7] + (Complex::new(-2.0, 0.0))*gamma*hbar*hbar*yn[2] + (Complex::new(2.0, 0.0))*nu*hbar*yn[9]*yn[7] + (Complex::new(2.0, 0.0))*nu*hbar*yn[6]*yn[7].conj() + (Complex::new(2.0, 0.0))*nu*hbar*yn[3]*yn[2] + (Complex::new(-4.0, 0.0))*nu*hbar*yn[3]*yn[7].conj()*yn[7] + (Complex::new(4.0, 0.0))*nu*hbar*hbar*yn[4]; 
	 fty[3] = (Complex::new(-0.0, -1.0))*g*hbar*yn[1] + (Complex::new(0.0, 1.0))*g*hbar*yn[1].conj() + (Complex::new(1.0, 0.0))*gamma*hbar*yn[2] + (Complex::new(-1.0, 0.0))*nu*hbar*yn[2] + (Complex::new(-2.0, 0.0))*nu*hbar*hbar*yn[3]; 
	 fty[4] = (Complex::new(0.0, -2.0))*g*hbar*yn[6]*yn[8] + (Complex::new(0.0, -2.0))*g*hbar*yn[5].conj()*yn[7] + (Complex::new(0.0, -2.0))*g*hbar*yn[3]*yn[1] + (Complex::new(0.0, 4.0))*g*hbar*yn[3]*yn[7]*yn[8] + (Complex::new(0.0, 1.0))*g*hbar*hbar*yn[1] + (Complex::new(0.0, 2.0))*g*hbar*yn[9]*yn[8].conj() + (Complex::new(0.0, 2.0))*g*hbar*yn[5]*yn[7].conj() + (Complex::new(0.0, 2.0))*g*hbar*yn[3]*yn[1].conj() + (Complex::new(-0.0, -4.0))*g*hbar*yn[3]*yn[7].conj()*yn[8].conj() + (Complex::new(0.0, 1.0))*g*hbar*hbar*yn[1].conj() + (Complex::new(2.0, 0.0))*gamma*hbar*yn[9]*yn[7] + (Complex::new(2.0, 0.0))*gamma*hbar*yn[6]*yn[7].conj() + (Complex::new(2.0, 0.0))*gamma*hbar*yn[3]*yn[2] + (Complex::new(-4.0, 0.0))*gamma*hbar*yn[3]*yn[7].conj()*yn[7] + (Complex::new(1.0, 0.0))*gamma*hbar*hbar*yn[2] + (Complex::new(-2.0, 0.0))*nu*hbar*yn[9]*yn[7] + (Complex::new(-2.0, 0.0))*nu*hbar*yn[6]*yn[7].conj() + (Complex::new(-2.0, 0.0))*nu*hbar*yn[3]*yn[2] + (Complex::new(4.0, 0.0))*nu*hbar*yn[3]*yn[7].conj()*yn[7] + (Complex::new(1.0, 0.0))*nu*hbar*hbar*yn[2] + (Complex::new(2.0, 0.0))*nu*hbar*hbar*hbar*yn[3] + (Complex::new(-4.0, 0.0))*nu*hbar*hbar*yn[4]; 
	 fty[5] = (Complex::new(0.0, 1.0))*delta*yn[5] + (Complex::new(0.0, 1.0))*g*yn[6] + (Complex::new(-0.5, 0.0))*kappa*yn[5] + (Complex::new(0.0, -1.0))*g*hbar*yn[10]*yn[8] + (Complex::new(0.0, -1.0))*g*hbar*yn[1]*yn[8].conj() + (Complex::new(0.0, -1.0))*g*hbar*yn[7]*yn[0] + (Complex::new(0.0, 2.0))*g*hbar*yn[7]*yn[8].conj()*yn[8] + (Complex::new(0.0, 1.0))*g*hbar*yn[1].conj()*yn[8].conj() + (Complex::new(0.0, 1.0))*g*hbar*yn[1].conj()*yn[8].conj() + (Complex::new(0.0, 1.0))*g*hbar*yn[7].conj()*yn[12] + (Complex::new(-0.0, -2.0))*g*hbar*yn[7].conj()*yn[8].conj()*yn[8].conj() + (Complex::new(1.0, 0.0))*gamma*hbar*yn[2]*yn[8].conj() + (Complex::new(1.0, 0.0))*gamma*hbar*yn[1].conj()*yn[7] + (Complex::new(1.0, 0.0))*gamma*hbar*yn[7].conj()*yn[10] + (Complex::new(-2.0, 0.0))*gamma*hbar*yn[7].conj()*yn[7]*yn[8].conj() + (Complex::new(-1.0, 0.0))*nu*hbar*yn[2]*yn[8].conj() + (Complex::new(-1.0, 0.0))*nu*hbar*yn[1].conj()*yn[7] + (Complex::new(-1.0, 0.0))*nu*hbar*yn[7].conj()*yn[10] + (Complex::new(2.0, 0.0))*nu*hbar*yn[7].conj()*yn[7]*yn[8].conj() + (Complex::new(-2.0, 0.0))*nu*hbar*hbar*yn[5] + (Complex::new(-0.0, -1.0))*g*hbar*yn[7]; 
	 fty[6] = (Complex::new(0.0, -1.0))*g*hbar*yn[11]*yn[8] + (Complex::new(0.0, -1.0))*g*hbar*yn[1]*yn[7] + (Complex::new(0.0, -1.0))*g*hbar*yn[7]*yn[1] + (Complex::new(0.0, 2.0))*g*hbar*yn[7]*yn[7]*yn[8] + (Complex::new(0.0, 1.0))*g*hbar*yn[2]*yn[8].conj() + (Complex::new(0.0, 1.0))*g*hbar*yn[1].conj()*yn[7] + (Complex::new(0.0, 1.0))*g*hbar*yn[7].conj()*yn[10] + (Complex::new(-0.0, -2.0))*g*hbar*yn[7].conj()*yn[7]*yn[8].conj() + (Complex::new(0.0, -2.0))*g*hbar*yn[4]*yn[8].conj() + (Complex::new(0.0, -2.0))*g*hbar*yn[5]*yn[3] + (Complex::new(0.0, -2.0))*g*hbar*yn[3]*yn[5] + (Complex::new(0.0, 4.0))*g*hbar*yn[3]*yn[3]*yn[8].conj() + (Complex::new(1.0, 0.0))*gamma*hbar*yn[2]*yn[7] + (Complex::new(1.0, 0.0))*gamma*hbar*yn[2]*yn[7] + (Complex::new(1.0, 0.0))*gamma*hbar*yn[7].conj()*yn[11] + (Complex::new(-2.0, 0.0))*gamma*hbar*yn[7].conj()*yn[7]*yn[7] + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[4]*yn[7] + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[6]*yn[3] + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[3]*yn[6] + (Complex::new(2.0, 0.0))*gamma*hbar*yn[3]*yn[3]*yn[7] + (Complex::new(-1.0, 0.0))*nu*hbar*yn[2]*yn[7] + (Complex::new(-1.0, 0.0))*nu*hbar*yn[2]*yn[7] + (Complex::new(-1.0, 0.0))*nu*hbar*yn[7].conj()*yn[11] + (Complex::new(2.0, 0.0))*nu*hbar*yn[7].conj()*yn[7]*yn[7] + (Complex::new(-5.0, 0.0))*nu*hbar*hbar*yn[6] + (Complex::new(2.0, 0.0))*nu*hbar*hbar*hbar*yn[7] + (Complex::new(1.0, 0.0))*nu*hbar*yn[4]*yn[7] + (Complex::new(1.0, 0.0))*nu*hbar*yn[6]*yn[3] + (Complex::new(1.0, 0.0))*nu*hbar*yn[3]*yn[6] + (Complex::new(-2.0, 0.0))*nu*hbar*yn[3]*yn[3]*yn[7]; 
	 fty[7] = (Complex::new(0.0, -2.0))*g*hbar*yn[5] + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[6] + (Complex::new(1.0, 0.0))*nu*hbar*yn[6] + (Complex::new(-1.0, 0.0))*nu*hbar*hbar*yn[7]; 
	 fty[8] = (Complex::new(0.0, -1.0))*delta*yn[8] + (Complex::new(0.0, -1.0))*g*yn[7].conj() + (Complex::new(-0.5, 0.0))*kappa*yn[8]; 
	 fty[9] = (Complex::new(0.0, -1.0))*g*hbar*yn[2]*yn[8] + (Complex::new(0.0, -1.0))*g*hbar*yn[10].conj()*yn[7] + (Complex::new(0.0, -1.0))*g*hbar*yn[7].conj()*yn[1] + (Complex::new(0.0, 2.0))*g*hbar*yn[7].conj()*yn[7]*yn[8] + (Complex::new(0.0, -2.0))*g*hbar*hbar*yn[5].conj() + (Complex::new(0.0, 2.0))*g*hbar*yn[4]*yn[8] + (Complex::new(0.0, 2.0))*g*hbar*yn[5].conj()*yn[3] + (Complex::new(0.0, 2.0))*g*hbar*yn[3]*yn[5].conj() + (Complex::new(-0.0, -4.0))*g*hbar*yn[3]*yn[3]*yn[8] + (Complex::new(0.0, 1.0))*g*hbar*yn[11].conj()*yn[8].conj() + (Complex::new(0.0, 1.0))*g*hbar*yn[1].conj()*yn[7].conj() + (Complex::new(0.0, 1.0))*g*hbar*yn[7].conj()*yn[1].conj() + (Complex::new(-0.0, -2.0))*g*hbar*yn[7].conj()*yn[7].conj()*yn[8].conj() + (Complex::new(1.0, 0.0))*gamma*hbar*yn[11].conj()*yn[7] + (Complex::new(1.0, 0.0))*gamma*hbar*yn[2]*yn[7].conj() + (Complex::new(1.0, 0.0))*gamma*hbar*yn[7].conj()*yn[2] + (Complex::new(-2.0, 0.0))*gamma*hbar*yn[7].conj()*yn[7].conj()*yn[7] + (Complex::new(-1.0, 0.0))*gamma*hbar*hbar*yn[9] + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[4]*yn[7].conj() + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[9]*yn[3] + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[3]*yn[9] + (Complex::new(2.0, 0.0))*gamma*hbar*yn[3]*yn[3]*yn[7].conj() + (Complex::new(-1.0, 0.0))*nu*hbar*yn[11].conj()*yn[7] + (Complex::new(-1.0, 0.0))*nu*hbar*yn[2]*yn[7].conj() + (Complex::new(-1.0, 0.0))*nu*hbar*yn[7].conj()*yn[2] + (Complex::new(2.0, 0.0))*nu*hbar*yn[7].conj()*yn[7].conj()*yn[7] + (Complex::new(-4.0, 0.0))*nu*hbar*hbar*yn[9] + (Complex::new(-2.0, 0.0))*nu*hbar*hbar*hbar*yn[7].conj() + (Complex::new(1.0, 0.0))*nu*hbar*yn[4]*yn[7].conj() + (Complex::new(1.0, 0.0))*nu*hbar*yn[9]*yn[3] + (Complex::new(1.0, 0.0))*nu*hbar*yn[3]*yn[9] + (Complex::new(-2.0, 0.0))*nu*hbar*yn[3]*yn[3]*yn[7].conj(); 
	 fty[10] = (Complex::new(0.0, 1.0))*delta*yn[10] + (Complex::new(0.0, 1.0))*g*yn[11] + (Complex::new(-0.5, 0.0))*kappa*yn[10] + (Complex::new(0.0, -2.0))*g*hbar*yn[5]*yn[8].conj() + (Complex::new(0.0, -2.0))*g*hbar*yn[5]*yn[8].conj() + (Complex::new(0.0, -2.0))*g*hbar*yn[3]*yn[12] + (Complex::new(0.0, 4.0))*g*hbar*yn[3]*yn[8].conj()*yn[8].conj() + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[6]*yn[8].conj() + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[5]*yn[7] + (Complex::new(-1.0, 0.0))*gamma*hbar*yn[3]*yn[10] + (Complex::new(2.0, 0.0))*gamma*hbar*yn[3]*yn[7]*yn[8].conj() + (Complex::new(1.0, 0.0))*nu*hbar*yn[6]*yn[8].conj() + (Complex::new(1.0, 0.0))*nu*hbar*yn[5]*yn[7] + (Complex::new(1.0, 0.0))*nu*hbar*yn[3]*yn[10] + (Complex::new(-2.0, 0.0))*nu*hbar*yn[3]*yn[7]*yn[8].conj() + (Complex::new(-1.0, 0.0))*nu*hbar*hbar*yn[10]; 
	 fty[11] = (Complex::new(0.0, -4.0))*g*hbar*yn[6]*yn[8].conj() + (Complex::new(0.0, -4.0))*g*hbar*yn[5]*yn[7] + (Complex::new(0.0, -4.0))*g*hbar*yn[3]*yn[10] + (Complex::new(0.0, 8.0))*g*hbar*yn[3]*yn[7]*yn[8].conj() + (Complex::new(0.0, 2.0))*g*hbar*hbar*yn[10] + (Complex::new(-2.0, 0.0))*gamma*hbar*yn[6]*yn[7] + (Complex::new(-2.0, 0.0))*gamma*hbar*yn[6]*yn[7] + (Complex::new(-2.0, 0.0))*gamma*hbar*yn[3]*yn[11] + (Complex::new(4.0, 0.0))*gamma*hbar*yn[3]*yn[7]*yn[7] + (Complex::new(1.0, 0.0))*gamma*hbar*hbar*yn[11] + (Complex::new(2.0, 0.0))*nu*hbar*yn[6]*yn[7] + (Complex::new(2.0, 0.0))*nu*hbar*yn[6]*yn[7] + (Complex::new(2.0, 0.0))*nu*hbar*yn[3]*yn[11] + (Complex::new(-4.0, 0.0))*nu*hbar*yn[3]*yn[7]*yn[7] + (Complex::new(-3.0, 0.0))*nu*hbar*hbar*yn[11]; 
	 fty[12] = (Complex::new(0.0, 2.0))*delta*yn[12] + (Complex::new(0.0, 2.0))*g*yn[10] + (Complex::new(-1.0, 0.0))*kappa*yn[12]; 
}